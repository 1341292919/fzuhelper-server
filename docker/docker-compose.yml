services:
  fzu-helper-redis:
    container_name: fzu-helper-redis
    image: redis:bookworm # 选择使用 redis 官方的 bookworm tag
    volumes:
      - ./data/redis:/data
    ports:
      - "6379:6379"
    env_file:
      - "./env/redis.env"
    networks:
      - fzu-helper

  fzu-helper-mysql:
    container_name: fzu-helper-mysql
    image: mysql:9.0.1 # 选择使用 mysql 官方的 9.0.1 版本
    env_file:
      - "./env/mysql.env"
    ports:
      - "3306:3306"
    networks:
      - fzu-helper
    volumes:
      - ../config/sql:/docker-entrypoint-initdb.d
      - ./data/mysql:/var/lib/mysql

  fzu-helper-etcd:
    container_name: fzu-helper-etcd
    # image: bitnami/etcd:3.5-debian-12
    image: quay.io/coreos/etcd:v3.5.5 # 计划使用 vmware 的 etcd3.5，但是似乎遇到了权限问题，data 挂载不上
    restart: always
    ports:
      - 2379:2379
      - 2380:2380
    env_file:
      - "./env/etcd.env"
    volumes:
      - ./script:/script
      - ../config:/config
      - ./data/etcd:/etcd-data
    networks:
      - fzu-helper
    entrypoint: [ "sh", "-c", "chmod +x /script/etcd-monitor.sh && /script/etcd-monitor.sh & exec etcd" ]

#  etcd-keeper:
#    hostname: fzuhelper-etcdkeeper
#    image: evildecay/etcdkeeper
#    environment:
#      - ETCD_HOSTS=http://etcd:2379
#      - SW_STORAGE_ETCD_CLUSTER_NODES=etcd:2379
#      - HOST=0.0.0.0
#      - HOSTNAME=etcd-keeper
#    links:
#      - etcd
#    ports:
#      - 8099:8080
#    depends_on:
#      - etcd
#    networks:
#      - fzuhelper
#  elasticsearch:
#    image: elasticsearch:8.4.2
#    container_name: fzuhelper-elasticsearch
#    environment:
#      bootstrap.memory_lock: "true"
#      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
#      discovery.type: single-node
#      ingest.geoip.downloader.enabled: "false"
#      TZ: Asia/Shanghai
#      xpack.security.enabled: "false"
#    healthcheck:
#      test: [ "CMD-SHELL", "curl -sf http://elasticsearch:9200/_cluster/health || exit 1" ] # ⼼跳检测，成功之后不再执⾏后⾯的退出
#      interval: 60s # ⼼跳检测间隔周期
#      timeout: 10s
#      retries: 3
#      start_period: 60s # ⾸次检测延迟时间
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    volumes:
#      - ../config/elasticsearch:/usr/share/elasticsearch/config
#      - ./data/elasticsearch:/usr/share/elasticsearch/data
#    ports:
#      - "9200:9200"
#    restart: always
#    networks:
#      - fzuhelper
#
#    kibana:
#      image: kibana:8.4.2
#      container_name: fzuhelper-kibana
#      environment:
#        - I18N_LOCALE=zh-CN
#        - XPACK_GRAPH_ENABLED=true
#        - TIMELION_ENABLED=true
#        - XPACK_MONITORING_COLLECTION_ENABLED="true"
#        - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#      depends_on:
#        - elasticsearch
#      ports:
#        - "5601:5601"
#      volumes:
#        - ../config/kibana:/usr/share/kibana/config
#        - ./data/kibana:/usr/share/kibana/data
#      networks:
#        - fzuhelper
#
#    jaeger:
#      container_name: fzuhelper-jaeger
#      image: "jaegertracing/all-in-one:latest"
#      restart: always
#      ports:
#        - 16686:16686
#        - 6831:6831/udp
#      volumes:
#        - ./data/jaeger:/var/lib/jaeger
#        - ../config/jaeger:/etc/jaeger
#      networks:
#        - fzuhelper
#
#    prometheus:
#      image: prom/prometheus
#      container_name: fzuhelper-prometheus
#      hostname: prometheus
#      restart: always
#      volumes:
#        - ../config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#      ports:
#        - 9090:9090
#      networks:
#        - fzuhelper
#
#    grafana:
#      image: grafana/grafana
#      container_name: fzuhelper-grafana
#      restart: always
#      ports:
#        - 3000:3000
#      volumes:
#        - ../config/grafana:/etc/grafana
#      networks:
#        - fzuhelper
#
#    alertmanager: #预警模块
#      image: prom/alertmanager
#      container_name: fzuhelper-alertmanager
#      restart: always
#      ports:
#        - 9093:9093
#      networks:
#        - fzuhelper
#
#    node-exporter:
#      image: quay.io/prometheus/node-exporter
#      container_name: fzuhelper-node-exporter
#      restart: always
#      ports:
#        - 9100:9100
#      networks:
#        - fzuhelper
#
#    cadvisor:
#      image: google/cadvisor:latest
#      container_name: fzuhelper-cadvisor
#      restart: always
#      platform: linux/amd64
#      volumes:
#        - /:/rootfs:ro
#        - /var/run:/var/run:rw
#        - /sys:/sys:ro
#        - /var/lib/docker/:/var/lib/docker:ro
#      ports:
#        - 8899:8080
#      networks:
#        - fzuhelper
#
#    redis-exporter:
#      image: oliver006/redis_exporter
#      container_name: fzuhelper-redis-exporter
#      restart: always
#      ports:
#        - 9121:9121
#      command:
#        - "--redis.addr=redis://127.0.0.1:6379"
#      networks:
#        - fzuhelper
#
#  mysql_xporter:
#    image: prom/mysqld-exporter
#    container_name: fzuhelper-mysql-exporter
#    restart: always
#    ports:
#      - 9104:9104
#    environment:
#      DATA_SOURCE_NAME: 'exporter:123456@(127.0.0.1:3306)'
#    networks:
#       - fzuhelper

#  kafka:
#    container_name: fzuhelper-kafka
#    image: bitnami/kafka:latest
#    restart: always
#    user: root
#    ports:
#      - "9092:9092"
#      - "9093:9093"
#    environment:
#      - BITNAMI_DEBUG=yes
#      # 启用KRaft模式必须设置下面三个属性
#      - KAFKA_CFG_NODE_ID=1
#      - KAFKA_CFG_PROCESS_ROLES=broker,controller
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#      # broker id
#      - KAFKA_BROKER_ID=1
#      # listener的各种配置
#      - KAFKA_CFG_LISTENERS=CONTROLLER://:9094,BROKER://:9092,EXTERNAL://:9093
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT
#      # 注意EXTERNAL配置的是当前Docker所在的主机地址,BROKER可以使用Docker内部的网络地址即可
#      - KAFKA_CFG_ADVERTISED_LISTENERS=BROKER://fzuhelper-kafka:9092,EXTERNAL://127.0.0.1:9093
#      # 内部各个broker之间通信用的listener
#      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=BROKER
#      # 用来进行选举的Controller服务器，如果有多个Controller则都需要写上，这里本机
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9094
#      - ALLOW_PLAINTEXT_LISTENER=yes
#    volumes:
#      - ./data/kafka:/bitnami/kafka
#    networks:
#      - fzuhelper
#
#  kafka-ui:
#    container_name: fzuhelper-kafka-ui
#    image: provectuslabs/kafka-ui:latest
#    restart: always
#    ports:
#      - "9091:8080"
#    environment:
#      # 集群名称
#      - KAFKA_CLUSTERS_0_NAME=single
#      # 集群地址
#      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS= kafka:9092
#    networks:
#      - fzuhelper

networks:
  fzu-helper:
    driver: bridge
    name: fzu-helper
